---

- name: Install sudo
  package: name=sudo state=installed
  ignore_errors: true

- name: Add the RHEL Fedora maven repo
  template:
    src: "epel-apache-maven.repo"
    dest: "/etc/yum.repos.d/epel-apache-maven.repo"
    mode: 0644
  become: true
  when: ansible_os_family == 'RedHat'

- name: Add Maven repo
  apt_repository: repo='ppa:andrei-pozolotin/maven3' state=present update_cache=yes
  when: ansible_os_family == 'Debian'

- name: Add Java repo
  apt_repository: repo='ppa:openjdk-r/ppa' state=present update_cache=yes
  when: ansible_os_family == 'Debian'

- name: Install RH epel
  yum: name="epel-release" state=installed update_cache=yes
  become: true
  when: ansible_os_family == 'RedHat'

- name: Install Debian-specific packages
  apt: name="{{ item }}" state=installed install_recommends=no
  become: true
  with_items:
    - software-properties-common
  when: ansible_os_family == 'Debian'

- name: Trust packaging key for gcc-5 repository
  apt_key:
    data: "{{ lookup('file', 'files/ubuntu-toolchain-r-ppa.asc') }}"
    id: BA9EF27F
    state: present
  when: ansible_os_family == 'Debian'

- name: Install gcc-5 repository
  apt_repository: repo='ppa:ubuntu-toolchain-r/test' state=present
  when: ansible_os_family == 'Debian'

- name: Trust packaging key for OpenJDK repository
  apt_key:
    data: "{{ lookup('file', 'files/openjdk-ppa.asc') }}"
    id: 86F44E2A
    state: present
  when: ansible_os_family == 'Debian'

- name: Install openjdk apt repository
  apt_repository: repo='ppa:openjdk-r/ppa' state=present
  when: ansible_os_family == 'Debian'

- name: Trust packaging key for Cmake repository
  apt_key:
    data: "{{ lookup('file', 'files/gedison-ppa.asc') }}"
    id: 828AB726
    state: present
  when: ansible_os_family == 'Debian'

- name: Install cmake apt repository
  apt_repository: repo='ppa:george-edison55/cmake-3.x' state=present
  when: ansible_os_family == 'Debian'

- name: Update Debian cache
  apt: update_cache=yes
  when: ansible_os_family == 'Debian'

- name: "Gather OS specific variables"
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_version }}.yml"
    - "{{ ansible_distribution|lower }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution|lower }}.yml"
    - "{{ ansible_os_family|lower }}.yml"
    - "default.yml"

- block:
  - include: configure_yum.yml
    when: ansible_pkg_mgr == 'yum'

  - include: configure_apt.yml
    when: ansible_pkg_mgr == 'apt'

  - name: Install CUDA and related packages (1.5-2GB download)
    yum:
      name: "{{ item }}"
      state: present
      skip_broken: true
      enablerepo: nvidia
    with_items: "{{ cuda_packages }}"
    when: ansible_os_family == 'RedHat'

  - name: Install CUDA and related packages (1.5-2GB download)
    package:
      name: "{{ item }}"
      state: present
    with_items: "{{ cuda_packages }}"
    when: ansible_os_family == 'Debian' and ansible_distribution_major_version|int != 12

  - name: Add Cuda to the PATH
    copy:
      src: files/cuda-8.0.sh
      dest: /etc/profile.d/cuda-8.0.sh
      owner: root
      group: root
      mode: 0644
      backup: yes
    when: ansible_os_family == 'RedHat'

  - name: Install CUDA for Ubuntu 12 (some packages unsigned)
    apt:
      name : "{{ item }}"
      state: present
      force: yes
      install_recommends: no
    with_items: "{{ cuda_packages }}"
    when: ansible_os_family == 'Debian' and ansible_distribution_major_version|int == 12

- name: Install Libjavacpp dependencies
  package: name="{{ item }}" state=installed update_cache=yes
  become: true
  with_items:
    - git
    - cmake
    - "{{ apache_maven_package_name }}"
    - python-setuptools
    - wget

- name: Install Debian-specific Libjavacpp dependencies
  apt: name="{{ item }}" state=installed install_recommends=no
  become: true
  with_items:
    - gcc-5
    - g++-5
    - libopenblas-base
    - libopenblas-dev
    - libatlas-dev
    - liblapack-dev
    - zookeeper
    - zlib1g-dev
    - "{{ atlas_package_name}}"
    - "{{ lapack_package_name }}"
  when: ansible_os_family == 'Debian'

- name: Add the zookeeper service
  template:
    src: "zookeeper.service"
    dest: "/usr/lib/zookeeper.service"
    mode: 0644
  become: true
  when: ansible_os_family == 'Debian'

- name: Add the zookeeper config template
  template:
    src: "zoo.cfg"
    dest: "/etc/zookeeper/zoo.cfg"
    mode: 0644
  become: true
  when: ansible_os_family == 'Debian'

- name: Add the zookeeper environment file
  template:
    src: "zookeeper"
    dest: "/etc/zookeeper"
    mode: 0644
  become: true
  when: ansible_os_family == 'Debian'

- name: Select Ubuntu-specific gcc-5 alternative
  alternatives:
    name: gcc
    link: /usr/bin/gcc
    path: /usr/bin/gcc-5
  when: ansible_os_family == 'Debian'

- name: Select Ubuntu-specific g++-5 alternative
  alternatives:
    name: g++
    link: /usr/bin/g++
    path: /usr/bin/g++-5
  when: ansible_os_family == 'Debian'

- name: Install RH-specific Libjavacpp dependencies
  yum: name="{{ item }}" state=installed
  become: true
  with_items:
    - atlas
    - blas
    - lapack
    - cmake3
    - centos-release-scl
  when: ansible_os_family == 'RedHat'

- name: Install RH-specific Libjavacpp dependencies (gcc)
  yum: name="{{ item }}" state=installed update_cache=yes
  become: true
  with_items:
    - redhat-lsb-core
    - rpm-build
    - zlib-devel
    - devtoolset-4-gcc
    - devtoolset-4-gcc-c++
  when: ansible_os_family == 'RedHat'

- name: Enable devtoolset by default
  copy:
    src: files/devtoolset-4.sh
    dest: /etc/profile.d/devtoolset-4.sh
    owner: root
    group: root
    mode: 0644
    backup: yes
  when: ansible_os_family == 'RedHat'

- name: Check /usr/bin/cmake version 2.x is present
  stat: path=/usr/bin/cmake
  register: cmake_stat
  when: ansible_os_family == 'RedHat'

- name: Move previous version of cmake
  command: mv /usr/bin/cmake /usr/bin/cmake2
  become: true
  when: ansible_os_family == 'RedHat' and cmake_stat.stat.exists

- name: register previous RedHat-specific cmake alternative
  alternatives:
    name: cmake
    link: /usr/bin/cmake
    path: /usr/bin/cmake2
    priority: 50
  when: ansible_os_family == 'RedHat' and cmake_stat.stat.exists

- name: Select RedHat-specific cmake alternative
  alternatives:
    name: cmake
    link: /usr/bin/cmake
    path: /usr/bin/cmake3
    priority: 100
  when: ansible_os_family == 'RedHat'

- name: clone zookeeper packaging repo
  git:
    repo: https://github.com/id/zookeeper-el7-rpm.git
    dest: /tmp/zookeeper-package
    depth: 1
    accept_hostkey: true
    update: true
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 6

- name: make zookeeper package
  shell: make rpm
  args:
    chdir: "/tmp/zookeeper-package"
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 6

- file: path=/opt/zookeeper state=directory mode=0755 owner=root
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 6

- name: list rpm
  command: find /tmp/zookeeper-package/x86_64/ -iname "zookeeper-*.rpm"
  register: dumprpm
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 6

- name: install zookeeper
  yum:
    name: "{{ dumprpm.stdout_lines }}"
    state: present
  become: yes
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 6

- name: test if we are in docker started with /sbin/init
  shell: systemctl > /dev/null
  ignore_errors: true
  register: systemctl_active

- name: enable the zookeeper daemon
  systemd:
    name: zookeeper
    daemon_reload: yes
    enabled: yes
    masked: no
  when: ansible_os_family == 'RedHat' and ansible_distribution_major_version|int > 6 and systemctl_active.rc == 0

- name: Define java_packages.
  set_fact:
    java_packages: "{{ __java_packages | list }}"
  when: java_packages is not defined

- name: Install java packages
  package:
    name: "{{ item }}"
    state: present
  become: true
  with_items: "{{ java_packages }}"

- name: Define python packages
  package:
    name: "{{ item }}"
    state: present
  become: true
  with_items: "{{ python_packages }}"
